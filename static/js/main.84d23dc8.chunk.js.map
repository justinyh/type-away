{"version":3,"sources":["components/Home.js","components/PlayerStatus.js","components/ActionBox.js","components/Timer.js","components/Lobby.js","components/TypeScreen.js","components/MainPlay.js","components/ErrorMessage.js","components/StatsBox.js","components/GamePage.js","components/NavBar.js","components/App.js","serviceWorker.js","index.js"],"names":["Home","props","state","name","error","helperText","loading","nameChangeHandler","bind","submitHandler","setTimeout","setState","e","target","value","this","trim","preventDefault","console","log","play","Box","maxWidth","padding","Paper","elevation","display","alignItems","justifyContent","minHeight","height","CircularProgress","size","Fade","in","onSubmit","Grid","spacing","container","direction","item","xs","Typography","variant","width","TextField","fullWidth","label","required","onChange","Button","type","Component","PlayerStatus","flexDirection","players","filter","player","spectator","map","key","id","align","gameLeader","finished","speed","self","onClick","toggleSpectator","color","ActionBox","showStart","p","startClick","Timer","time","callback","prototype","start","interval","setInterval","stop","clearInterval","reset","onTick","Lobby","message","updateHandler","send","sendMessage","overflow","messages","content","TypeScreen","words","excerptArr","excerpt","split","totalWords","textInput","React","createRef","updateParent","disallowMultipleSpace","current","focus","excerptWords","match","innerHTML","replace","length","correctWords","i","splice","update","finish","which","endsWith","className","component","slice","join","ref","onKeyDown","onKeyUp","contentEditable","style","border","MainPlay","updateWords","stopGame","ErrorMessage","startIcon","aria-label","back","StatsBox","Math","round","GamePage","timer","socket","showWait","spectators","listenToMessages","startGame","errorOut","close","io","timeout","emit","on","details","detailObj","JSON","parse","selfObj","find","element","arr","concat","showStop","sendUpdates","Container","marginTop","gameStarted","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","title","NavBar","classes","AppBar","position","Toolbar","IconButton","edge","App","bgcolor","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.84d23dc8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Fade, CircularProgress, Box, Grid, Container, TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { name: \"\", error: false, helperText: \"\", loading: true };\n    this.nameChangeHandler = this.nameChangeHandler.bind(this);\n    this.submitHandler = this.submitHandler.bind(this);\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({loading: false});\n    }, 1500);\n  }\n\n  nameChangeHandler(e) {\n    const name = e.target.value;\n    this.setState({name: name});\n    if (name.trim() !== \"\" && this.state.error === true) {\n      this.setState({error: false, helperText: \"\"});\n    }\n  }\n\n  submitHandler(e) {\n    e.preventDefault();\n    console.log(this.state.name);\n    if (this.state.name.trim() === \"\") {\n      this.setState({ error: true, helperText: \"You must enter a name.\" });\n    }\n    else {\n      this.props.play(this.state.name);\n    }\n    return false;\n  }\n\n  render() {\n    return (\n      <Box maxWidth=\"md\" padding=\"10vh\">\n        <Paper elevation={3}>\n          <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" minHeight=\"400px\" height=\"60vh\">\n            {this.state.loading ?\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n            <CircularProgress size={90} />\n            </Box> :\n            <Fade in={!this.state.loading}>\n            <form onSubmit={this.submitHandler}>\n              <Grid spacing={8} container direction=\"column\" alignItems=\"center\">\n                <Grid item xs={12}>\n                  <Typography variant=\"h1\">Type Away</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <Box width={300}>\n                    <TextField fullWidth helperText={this.state.helperText} error={this.state.error} label=\"Name\" variant=\"filled\" required onChange={this.nameChangeHandler} />\n                  </Box>\n                </Grid>\n                <Grid item xs={12}>\n                  <Button type=\"submit\">Continue</Button>\n                </Grid>\n              </Grid>\n            </form> \n            </Fade> }\n            </Box>\n        </Paper>\n      </Box>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { CircularProgress, Box, Paper, Typography, Button } from '@material-ui/core';\nimport StarIcon from '@material-ui/icons/Star';\n\nclass PlayerStatus extends Component {\n    constructor(props) {\n      super(props);\n      this.props = props;\n\n    }\n  \n    render() {\n      return (\n        <Paper>\n            <Box height=\"470px\" display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n            <Typography variant=\"h6\">PLAYERS</Typography>\n            {this.props.players.filter((player) => player.spectator === false).map((player) => <Box alignItems=\"center\" display=\"flex\" key={player.id}><Typography align=\"center\" variant=\"body1\">{player.name}</Typography>{player.gameLeader && <StarIcon />}\n            {player.finished && ` ${player.speed} WPM` }\n            </Box>)}\n            {this.props.self && this.props.self.spectator ? <Button onClick={this.props.toggleSpectator} variant=\"contained\" color=\"secondary\">Join as player</Button> : \"\"}\n            <Typography variant=\"h6\">SPECTATORS</Typography>\n            {this.props.players.filter((player) => player.spectator === true).map((spectator) => <Typography variant=\"body1\" key={spectator.id}>{spectator.name}</Typography>)}\n            {this.props.self && !this.props.self.spectator ? <Button onClick={this.props.toggleSpectator} variant=\"contained\" color=\"secondary\">Join as spectator</Button> : \"\"}\n        </Box>\n        </Paper>\n      );\n    }\n    \n  }\n  export default PlayerStatus;","import React, { Component } from 'react';\n\nimport { CircularProgress, Box, Paper, Typography, Button } from '@material-ui/core';\n\nclass ActionBox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showStart: false,\n        }\n    }\n\n    render() {\n        return(\n            <Box p={2}>\n            { this.props.loading && <CircularProgress size={90} /> }\n            {this.props.showStart ? <Button variant=\"contained\" color=\"primary\" onClick={this.props.startClick}>Start Game</Button> : \n            <Typography align=\"center\" variant=\"body1\">Please wait for the game leader.</Typography>}\n            </Box>\n        )\n    }\n}\n\nexport default ActionBox;\n","function Timer() {\n\tthis.time = 0;\n\tthis.callback = null;\n  }\n  \nTimer.prototype.start = function start() {\n\tthis.interval = setInterval(() => {\n\t\tthis.time += 1;\n\t\tif (!!this.callback) {\n\t\t\tthis.callback(this.time);\n\t\t}\n\t}, 1000);\n};\n\nTimer.prototype.stop = function stop() {\n\tclearInterval(this.interval);\n};\n\nTimer.prototype.reset = function reset() {\n\tthis.time = 0;\n};\n\nTimer.prototype.onTick = function onTick(callback) {\n\tthis.callback = callback;\n};\n\nexport default Timer;","import React, { Component } from 'react';\n\nimport { CircularProgress, Box, TextField, Typography } from '@material-ui/core';\n\nclass Lobby extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: \"\",\n        }\n        this.updateHandler = this.updateHandler.bind(this);\n        this.send = this.send.bind(this);\n    }\n\n    send(e) {\n        e.preventDefault();\n        this.props.sendMessage(this.state.message);\n        this.setState({message: \"\"});\n    }\n\n    updateHandler(e) {\n        const message = e.target.value;\n        this.setState({message: message});\n    }\n\n    render() {\n        return(\n            <Box>\n            { this.props.loading ? <Box height=\"inherit\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\"><CircularProgress size={90} /></Box> :\n                <Box>\n                <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" height=\"500px\" overflow=\"auto\">\n        {this.props.messages.map((message) => <Typography variant=\"body1\" key={message.id}>{message.name}: {message.content}</Typography>)}\n                </Box>\n            <Box>\n                <form onSubmit={this.send}>\n                    <TextField fullWidth variant=\"outlined\" label=\"Chat\" value={this.state.message} onChange={this.updateHandler} />\n                </form>\n            </Box>\n            </Box>\n            }\n            </Box>\n        );\n    }\n}\n\nexport default Lobby;\n","import React, { Component } from 'react';\nimport { Typography, Box } from '@material-ui/core';\n\nclass TypeScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        words: 0,\n        excerptArr: props.excerpt.split(\" \"),\n        totalWords: 0\n    }\n    this.textInput = React.createRef();\n    this.updateParent = this.updateParent.bind(this);\n    this.disallowMultipleSpace = this.disallowMultipleSpace.bind(this);\n\n  }\n\n  getDeri\n\n  componentDidMount() {\n      this.textInput.current.focus();\n  }\n\n  updateParent(e) {\n    let excerptWords = this.props.excerpt.match(/\\S+/g);\n    let str = e.target.innerHTML;\n    const words = str.replace(/&nbsp;/, \" \").match(/\\S+/g);\n    this.setState({totalWords: words.length});\n    const correctWords = [...words];\n    if (!!words){\n        for (let i = words.length; i >= 0; i--) { \n            console.log(\"comparing \", correctWords[i], \" to \", excerptWords[i]);\n            let curr = correctWords[i];\n            if (curr !== excerptWords[i]) {\n                correctWords.splice(i, 1);\n            }\n        }\n        this.setState({words: correctWords.length}, () => this.props.update(this.state.words));\n        console.log(\"words: \", words.length, \" excerpt: \", excerptWords.length);\n        if (words.length > excerptWords.length || correctWords[correctWords.length-1] === excerptWords[excerptWords.length-1]) {\n            this.props.finish();\n        }\n    }\n    else {\n        this.setState({words: 0});\n    }\n    console.log(\"excerpt: \", excerptWords);\n    console.log(words);\n  }\n\n  disallowMultipleSpace(e) {\n    if (e.which === 32 && e.target.innerHTML.endsWith(\"nbsp;\")) {\n        e.preventDefault();\n        return false;\n    }\n  }\n\n  render() {\n    return (\n      <Box className=\"Background\" p={3}>\n        <Typography variant=\"body1\">\n          <Box component=\"span\" color=\"primary.main\">{this.state.excerptArr.slice(0,this.state.totalWords).join(\" \")}</Box> <Box component=\"span\" color=\"secondary.main\">{this.state.excerptArr.slice(this.state.totalWords,this.state.excerptArr.length).join(\" \")}</Box>\n          <Box p={1} minHeight={20} ref={this.textInput} onKeyDown={this.disallowMultipleSpace} onKeyUp={this.updateParent} className=\"typebox\" contentEditable=\"true\" style={{border:'1px solid black'}}></Box>\n        </Typography>\n      </Box>\n    );\n  }\n  \n}\nexport default TypeScreen;","import React, { Component } from 'react';\nimport Lobby from './Lobby';\nimport TypeScreen from './TypeScreen';\n\n\nimport { CircularProgress, Box, Paper, Typography } from '@material-ui/core';\n\nclass MainPlay extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            excerpt: \"\",\n            words: 0,\n            time: 0\n        }\n    }\n\n    render() {\n        return(\n            <Box>\n            { this.props.start ? <TypeScreen update={this.props.updateWords} finish={this.props.stopGame} excerpt={this.props.excerpt} /> : \n                <Lobby sendMessage={this.props.sendMessage} messages={this.props.messages} loading={this.props.loading} error={this.props.error} /> \n            }\n            </Box>\n        );\n    }\n}\n\nexport default MainPlay;\n","import React from 'react';\nimport MenuBack from '@material-ui/icons/ArrowBack';\nimport { Paper, Button, Box, Typography } from '@material-ui/core';\n\nexport default function ErrorMessage(props) {\n    let message = \"\";\n    switch(props.type) {\n        case \"server\":\n            message = \"There was an error connecting to the server. Try again later.\";\n            break;\n        default:\n            message = \"There was an error. Please try again later.\";\n    }\n    return (\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n            <Typography variant=\"body1\">{message}</Typography>\n            <div>\n                <Button size=\"medium\" variant=\"contained\" startIcon={<MenuBack />}color=\"primary\" aria-label=\"menu\" onClick={props.back}>Back to Home</Button>\n            </div>\n        </Box>\n    );\n}","import React, { Component } from 'react';\n\nimport { CircularProgress, Box, Paper, Typography, Button } from '@material-ui/core';\n\nclass StatsBox extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n        return(\n            <Box>\n                <Typography variant=\"body1\">Time: {this.props.time}</Typography>\n                <Typography variant=\"body1\">Correct Words: {this.props.words}</Typography>\n                <Typography variant=\"body1\">WPM: {Math.round(60 * this.props.words / this.props.time)}</Typography>\n            </Box>\n        )\n    }\n}\n\nexport default StatsBox;","import React, { Component } from 'react';\nimport PlayerStatus from './PlayerStatus';\nimport ActionBox from './ActionBox';\nimport io from 'socket.io-client';\nimport Timer from './Timer';\nimport MainPlay from './MainPlay';\nimport ErrorMessage from './ErrorMessage';\nimport StatsBox from './StatsBox';\nimport { Container, Box, ThemeProvider, createMuiTheme, Slide, Paper, Grid } from '@material-ui/core';\n\nconst connection = \"https://8cce5b506ebb.ngrok.io\";\nclass GamePage extends Component {\n  constructor(props) {\n    super(props);\n    this.name = '';\n    this.timer = new Timer;\n    this.socket = null;\n    this.state = {\n        gameLeader: false,\n        showStart: false,\n        showWait: false,\n        start: false,\n        timer: null,\n        time: 3,\n        words: 0,\n        excerpt: \"\",\n        error: false,\n        loading: true,\n        players: [],\n        spectators: [],\n        self: {},\n        messages: []\n    };\n    this.listenToMessages = this.listenToMessages.bind(this);\n    this.startGame = this.startGame.bind(this);\n    this.startClick = this.startClick.bind(this);\n    this.updateWords = this.updateWords.bind(this);\n    this.stopGame = this.stopGame.bind(this);\n    this.errorOut = this.errorOut.bind(this);\n    this.toggleSpectator = this.toggleSpectator.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n\n  }\n\n  errorOut() {\n    this.setState({error: true, loading: false});\n    this.socket.close();\n\n  }\n\n  listenToMessages() {\n    const options = {\n      timeout: 5000,\n    }\n    this.socket = io(connection, options);\n    this.socket.emit('join', this.props.name);\n    this.socket.on('connect', () => {\n      console.log(\"Connected!\");\n      this.setState({loading: false});\n    });\n    this.socket.on('connect_error', () => {\n      console.log(\"Sorry, there seems to be an issue with the connection!\");\n      this.errorOut();\n    });\n    this.socket.on('playerchange', (details) => {\n      const detailObj = JSON.parse(details);\n      let selfObj = detailObj.players.find((element) => element.id === this.socket.id);\n      if (!selfObj) {\n        selfObj = detailObj.spectators.find((element) => element.id === this.socket.id);\n      }\n      console.log(\"self\", selfObj);\n      this.setState({\n        players: detailObj.players, \n        spectators: detailObj.spectators, \n        self: selfObj, \n        showStart: selfObj.gameLeader && !this.state.start\n      });\n    });\n    this.socket.on('gamestarted', (details) => {\n      const detailObj = JSON.parse(details);\n      this.setState({ excerpt: detailObj.excerpt, players: detailObj.players, spectators: detailObj.spectators});\n      this.startGame();\n    });\n    this.socket.on('gameupdate', (details) => {\n      const detailObj = JSON.parse(details);\n      this.setState({players: detailObj.players});\n    });\n    this.socket.on('gamefinished', (gameLeader) => {\n      if (this.socket.id === gameLeader) {\n        this.setState({showStart: true});\n      }\n      this.setState({showWait: false});\n    });\n    this.socket.on('message', (message) => {\n      const arr = this.state.messages.concat(message);\n      this.setState({messages: arr});\n    })\n  }\n  \n  componentDidMount() {\n    this.listenToMessages();\n    this.timer.onTick((time) => { this.setState({ time: time})});\n  }\n\n  sendUpdates() {\n    this.interval = setInterval(() => {\n      this.socket.emit('update', {time: this.state.time, words: this.state.words});\n    }, 500);\n  }\n  \n  startClick() {\n    this.socket.emit('startgame');\n    this.setState({showStart: false});\n  }\n\n  startGame() {\n    this.interval = setInterval(() => {\n      this.setState({time: this.state.time - 1});\n      if (this.state.time === 0) {\n        clearInterval(this.interval);\n        this.setState({start: true, showStop: true});\n        this.timer.start(); \n        this.sendUpdates();\n      }\n    }, 1000);\n  }\n\n  stopGame() {\n    this.setState({start: false, showStop: false, showWait: true});\n    this.timer.stop();\n    clearInterval(this.interval);\n    this.socket.emit('playerfinish', {words: this.state.words, time: this.state.time});\n    this.timer.reset();\n  }\n\n  toggleSpectator() {\n    this.socket.emit('togglespectator');\n  }\n\n  updateWords(words) {\n    this.setState({words: words});  \n  }\n  sendMessage(message) {\n    this.socket.emit('message', message);\n  }\n\n  render() {\n    return (\n      <Container>\n        <Box marginTop=\"50px\">\n        <Grid container spacing={2}>\n          <Grid item xs={10}>\n            <Paper>\n              <Box p={2} height=\"564px\">\n                {this.state.error ? <ErrorMessage type=\"server\" back={this.props.back} /> :\n                <MainPlay sendMessage={this.sendMessage} messages={this.state.messages} start={this.state.start} loading={this.state.loading} updateWords={this.updateWords} excerpt={this.state.excerpt} stopGame={this.stopGame} /> }\n              </Box>\n            </Paper>\n          </Grid>\n          <Grid item xs={2}>\n            <Box>\n              <PlayerStatus toggleSpectator={this.toggleSpectator} self={this.state.self} players={this.state.players} spectators={this.state.spectators}/>\n            </Box>\n            <Box marginTop=\"16px\">\n              <Paper>\n                <Box height=\"110px\" display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n                  {this.state.start ? \n                  <StatsBox words={this.state.words} time={this.state.time} /> :\n                  <ActionBox showStart={this.state.showStart} startClick={this.startClick} gameStarted={this.state.start} /> }\n                </Box>\n              </Paper>\n            </Box>\n          </Grid>\n        </Grid>\n        </Box>\n      </Container>\n    );\n  }\n  \n}\nexport default GamePage;","import React from 'react';\nimport MenuBack from '@material-ui/icons/ArrowBack';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Button, AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }));\n\nexport default function NavBar() {\n    const classes = useStyles();\n    return (\n        <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuBack />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Type Away\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    )\n}","import React, { Component } from 'react';\nimport Home from './Home';\nimport GamePage from './GamePage';\nimport { Button, Box, ThemeProvider, createMuiTheme } from '@material-ui/core';\nimport red from '@material-ui/core/colors/red';\nimport green from '@material-ui/core/colors/green';\nimport { palette } from '@material-ui/system';\nimport NavBar from './NavBar';\nimport '../assets/app.scss';\n/*\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: red[500],\n    },\n    secondary: {\n      main: green[500],\n    },\n  },\n});\n*/\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { play: false}\n    this.play = this.play.bind(this);\n    this.back = this.back.bind(this);\n  }\n\n  play(name) {\n    this.name = name;\n    console.log(\"Let's play,\", name);\n    this.setState({ play: true});\n  }\n\n  back() {\n    this.setState({ play: false });\n  }\n\n  render() {\n    return (\n      <Box height=\"100%\" bgcolor=\"primary.dark\">\n      <NavBar />\n        { this.state.play ?\n          <GamePage name={this.name} back={this.back} /> :\n          <Home play={this.play} />\n        }\n      </Box>\n    );\n  }\n  \n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}