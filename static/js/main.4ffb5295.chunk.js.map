{"version":3,"sources":["components/Home.js","components/PlayerStatus.js","components/ActionBox.js","components/Timer.js","components/ErrorMessage.js","components/Lobby.js","components/TypeScreen.js","components/MainPlay.js","components/StatsBox.js","components/GamePage.js","components/NavBar.js","components/App.js","serviceWorker.js","index.js"],"names":["Home","props","state","name","error","helperText","loading","nameChangeHandler","bind","submitHandler","setTimeout","setState","e","target","value","this","trim","preventDefault","console","log","play","Box","maxWidth","padding","Paper","elevation","display","alignItems","justifyContent","minHeight","height","CircularProgress","size","Fade","in","onSubmit","Grid","spacing","container","direction","item","xs","Typography","variant","width","TextField","fullWidth","label","required","onChange","Button","type","Component","PlayerStatus","flexDirection","players","map","player","key","id","gameLeader","finished","speed","spectators","spectator","color","ActionBox","showStart","onClick","startClick","start","Timer","time","callback","prototype","interval","setInterval","stop","clearInterval","reset","onTick","ErrorMessage","message","startIcon","aria-label","back","Lobby","TypeScreen","words","textInput","React","createRef","updateParent","disallowMultipleSpace","current","focus","excerptWords","excerpt","match","innerHTML","replace","correctWords","i","length","splice","update","finish","which","endsWith","className","p","ref","onKeyDown","onKeyUp","contentEditable","style","border","MainPlay","updateWords","stopGame","StatsBox","Math","round","GamePage","timer","socket","showWait","self","listenToMessages","startGame","errorOut","close","io","timeout","emit","on","details","detailObj","JSON","parse","showStop","sendUpdates","Container","marginTop","gameStarted","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","title","NavBar","classes","AppBar","position","Toolbar","IconButton","edge","App","bgcolor","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.4ffb5295.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Fade, CircularProgress, Box, Grid, Container, TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { name: \"\", error: false, helperText: \"\", loading: true };\n    this.nameChangeHandler = this.nameChangeHandler.bind(this);\n    this.submitHandler = this.submitHandler.bind(this);\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({loading: false});\n    }, 1500);\n  }\n\n  nameChangeHandler(e) {\n    const name = e.target.value;\n    this.setState({name: name});\n    if (name.trim() !== \"\" && this.state.error === true) {\n      this.setState({error: false, helperText: \"\"});\n    }\n  }\n\n  submitHandler(e) {\n    e.preventDefault();\n    console.log(this.state.name);\n    if (this.state.name.trim() === \"\") {\n      this.setState({ error: true, helperText: \"You must enter a name.\" });\n    }\n    else {\n      this.props.play(this.state.name);\n    }\n    return false;\n  }\n\n  render() {\n    return (\n      <Box maxWidth=\"md\" padding=\"10vh\">\n        <Paper elevation={3}>\n          <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" minHeight=\"400px\" height=\"60vh\">\n            {this.state.loading ?\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n            <CircularProgress size={90} />\n            </Box> :\n            <Fade in={!this.state.loading}>\n            <form onSubmit={this.submitHandler}>\n              <Grid spacing={8} container direction=\"column\" alignItems=\"center\">\n                <Grid item xs={12}>\n                  <Typography variant=\"h1\">Type Away</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <Box width={300}>\n                    <TextField fullWidth helperText={this.state.helperText} error={this.state.error} label=\"Name\" variant=\"filled\" required onChange={this.nameChangeHandler} />\n                  </Box>\n                </Grid>\n                <Grid item xs={12}>\n                  <Button type=\"submit\">Continue</Button>\n                </Grid>\n              </Grid>\n            </form> \n            </Fade> }\n            </Box>\n        </Paper>\n      </Box>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { CircularProgress, Box, Paper, Typography, Button } from '@material-ui/core';\nimport StarIcon from '@material-ui/icons/Star';\n\nclass PlayerStatus extends Component {\n    constructor(props) {\n      super(props);\n      this.props = props;\n\n    }\n  \n    render() {\n      return (\n        <Paper>\n            <Box height=\"470px\" display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n            <Typography variant=\"h6\">PLAYERS</Typography>\n            <Typography variant=\"body1\">\n              {this.props.players.map((player) => <Box display=\"flex\" key={player.id}>{player.name}{player.gameLeader && <StarIcon />}\n              {player.finished && ` ${player.speed} WPM` }\n              </Box>)}\n            </Typography>\n            <Typography variant=\"h6\">SPECTATORS</Typography>\n            <Typography variant=\"body1\">\n              {this.props.spectators.map((spectator) => <div key={spectator.id}>{spectator.name}</div>)}\n            </Typography>\n            <Button variant=\"contained\" color=\"secondary\">Join as spectator</Button>\n        </Box>\n        </Paper>\n      );\n    }\n    \n  }\n  export default PlayerStatus;","import React, { Component } from 'react';\n\nimport { CircularProgress, Box, Paper, Typography, Button } from '@material-ui/core';\n\nclass ActionBox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showStart: false,\n        }\n    }\n\n    render() {\n        return(\n            <Box>\n            { this.props.loading ? <CircularProgress size={90} /> :\n                    \"\"\n            }\n            {this.props.showStart && <Button variant=\"contained\" color=\"primary\" onClick={this.props.startClick}>Start Game</Button>}\n            {this.props.start && \"whee\"}\n            </Box>\n        )\n    }\n}\n\nexport default ActionBox;\n","function Timer() {\n\tthis.time = 0;\n\tthis.callback = null;\n  }\n  \nTimer.prototype.start = function start() {\n\tthis.interval = setInterval(() => {\n\t\tthis.time += 1;\n\t\tif (!!this.callback) {\n\t\t\tthis.callback(this.time);\n\t\t}\n\t}, 1000);\n};\n\nTimer.prototype.stop = function stop() {\n\tclearInterval(this.interval);\n};\n\nTimer.prototype.reset = function reset() {\n\tthis.time = 0;\n};\n\nTimer.prototype.onTick = function onTick(callback) {\n\tthis.callback = callback;\n};\n\nexport default Timer;","import React from 'react';\nimport MenuBack from '@material-ui/icons/ArrowBack';\nimport { Paper, Button, Box, Typography } from '@material-ui/core';\n\nexport default function ErrorMessage(props) {\n    let message = \"\";\n    switch(props.type) {\n        case \"server\":\n            message = \"There was an error connecting to the server. Try again later.\";\n            break;\n        default:\n            message = \"There was an error. Please try again later.\";\n    }\n    return (\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n            <Typography variant=\"body1\">{message}</Typography>\n            <div>\n                <Button size=\"medium\" variant=\"contained\" startIcon={<MenuBack />}color=\"primary\" aria-label=\"menu\" onClick={props.back}>Back to Home</Button>\n            </div>\n        </Box>\n    );\n}","import React, { Component } from 'react';\nimport ErrorMessage from './ErrorMessage';\n\nimport { CircularProgress, Box, Paper, Typography } from '@material-ui/core';\n\nclass Lobby extends Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return(\n            <Box>\n            { this.props.loading ? <CircularProgress size={90} /> :\n                <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n                Future Chatbox\n            </Box>\n                \n            }\n            </Box>\n        );\n    }\n}\n\nexport default Lobby;\n","import React, { Component } from 'react';\nimport { Typography, Box } from '@material-ui/core';\n\nclass TypeScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        words: 0,\n    }\n    this.textInput = React.createRef();\n    this.updateParent = this.updateParent.bind(this);\n    this.disallowMultipleSpace = this.disallowMultipleSpace.bind(this);\n\n  }\n\n  componentDidMount() {\n      this.textInput.current.focus();\n  }\n\n  updateParent(e) {\n    let excerptWords = this.props.excerpt.match(/\\S+/g);\n    let str = e.target.innerHTML;\n    const words = str.replace(/&nbsp;/, \" \").match(/\\S+/g);\n    const correctWords = [...words];\n    if (!!words){\n        for (let i = words.length; i >= 0; i--) { \n            console.log(\"comparing \", correctWords[i], \" to \", excerptWords[i]);\n            let curr = correctWords[i];\n            if (curr !== excerptWords[i]) {\n                correctWords.splice(i, 1);\n            }\n        }\n        this.setState({words: correctWords.length}, () => this.props.update(this.state.words));\n        console.log(\"words: \", words.length, \" excerpt: \", excerptWords.length);\n        if (words.length > excerptWords.length || correctWords[correctWords.length-1] === excerptWords[excerptWords.length-1]) {\n            this.props.finish();\n        }\n    }\n    else {\n        this.setState({words: 0});\n    }\n    console.log(\"excerpt: \", excerptWords);\n    console.log(words);\n  }\n\n  disallowMultipleSpace(e) {\n    if (e.which === 32 && e.target.innerHTML.endsWith(\"nbsp;\")) {\n        e.preventDefault();\n        return false;\n    }\n  }\n\n  render() {\n    return (\n      <Box className=\"Background\" p={3}>\n        <Typography variant=\"body1\">\n          {this.props.excerpt}\n          <Box p={1} minHeight={20} ref={this.textInput} onKeyDown={this.disallowMultipleSpace} onKeyUp={this.updateParent} className=\"typebox\" contentEditable=\"true\" style={{border:'1px solid black'}}></Box>\n        </Typography>\n      </Box>\n    );\n  }\n  \n}\nexport default TypeScreen;","import React, { Component } from 'react';\nimport Lobby from './Lobby';\nimport TypeScreen from './TypeScreen';\n\n\nimport { CircularProgress, Box, Paper, Typography } from '@material-ui/core';\n\nclass MainPlay extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            excerpt: \"\",\n            words: 0,\n            time: 0\n        }\n    }\n\n    render() {\n        return(\n            <Box>\n            { this.props.start ? <TypeScreen update={this.props.updateWords} finish={this.props.stopGame} excerpt={this.props.excerpt} /> : \n                <Lobby loading={this.props.loading} error={this.props.error} /> \n            }\n            </Box>\n        );\n    }\n}\n\nexport default MainPlay;\n","import React, { Component } from 'react';\n\nimport { CircularProgress, Box, Paper, Typography, Button } from '@material-ui/core';\n\nclass StatsBox extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n        return(\n            <Box>\n                <div>Time: {this.props.time}</div>\n                <div>Correct Words: {this.props.words}</div>\n                <div>WPM: {Math.round(60 * this.props.words / this.props.time)}</div>\n            </Box>\n        )\n    }\n}\n\nexport default StatsBox;","import React, { Component } from 'react';\nimport PlayerStatus from './PlayerStatus';\nimport ActionBox from './ActionBox';\nimport io from 'socket.io-client';\nimport Timer from './Timer';\nimport MainPlay from './MainPlay';\nimport ErrorMessage from './ErrorMessage';\nimport StatsBox from './StatsBox';\nimport { Container, Box, ThemeProvider, createMuiTheme, Slide, Paper, Grid } from '@material-ui/core';\n\nconst connection = \"https://8cce5b506ebb.ngrok.io\";\nclass GamePage extends Component {\n  constructor(props) {\n    super(props);\n    this.name = '';\n    this.timer = new Timer;\n    this.socket = null;\n    this.state = {\n        gameLeader: false,\n        showStart: false,\n        showWait: false,\n        start: false,\n        timer: null,\n        time: 3,\n        words: 0,\n        excerpt: \"\",\n        error: false,\n        loading: true,\n        players: [],\n        spectators: [],\n        self: {}\n    };\n    this.listenToMessages = this.listenToMessages.bind(this);\n    this.startGame = this.startGame.bind(this);\n    this.startClick = this.startClick.bind(this);\n    this.updateWords = this.updateWords.bind(this);\n    this.stopGame = this.stopGame.bind(this);\n    this.errorOut = this.errorOut.bind(this);\n  }\n\n  errorOut() {\n    this.setState({error: true, loading: false});\n    this.socket.close();\n  }\n\n  listenToMessages() {\n    const options = {\n      timeout: 5000,\n    }\n    this.socket = io(connection, options);\n    this.socket.emit('join', this.props.name);\n    this.socket.on('connect', () => {\n      console.log(\"Connected!\");\n      this.setState({loading: false});\n    });\n    this.socket.on('connect_error', () => {\n      console.log(\"Sorry, there seems to be an issue with the connection!\");\n      this.errorOut();\n    });\n    this.socket.on('playerchange', (details) => {\n      const detailObj = JSON.parse(details);\n      this.setState({players: detailObj.players, spectators: detailObj.spectators});\n      if (this.socket.id === detailObj.gameLeader && !this.state.start) {\n        this.setState({showStart: true});\n      }\n    });\n    this.socket.on('gamestarted', (details) => {\n      const detailObj = JSON.parse(details);\n      this.setState({ excerpt: detailObj.excerpt, players: detailObj.players, spectators: detailObj.spectators});\n      this.startGame();\n    });\n    this.socket.on('gameupdate', (details) => {\n      const detailObj = JSON.parse(details);\n      this.setState({players: detailObj.players});\n    });\n    this.socket.on('gamefinished', () => {\n      if (this.socket.id === this.state.gameLeader) {\n        this.setState({showStart: true});\n      }\n      this.setState({showWait: false});\n    });\n  }\n  \n  componentDidMount() {\n    this.listenToMessages();\n    this.timer.onTick((time) => { this.setState({ time: time})});\n  }\n\n  sendUpdates() {\n    this.interval = setInterval(() => {\n      this.socket.emit('update', {time: this.state.time, words: this.state.words});\n    }, 500);\n  }\n  \n  startClick() {\n    this.socket.emit('startgame');\n    this.setState({showStart: false});\n  }\n\n  startGame() {\n    this.interval = setInterval(() => {\n      this.setState({time: this.state.time - 1});\n      if (this.state.time === 0) {\n        clearInterval(this.interval);\n        this.setState({start: true, showStop: true});\n        this.timer.start(); \n        this.sendUpdates();\n      }\n    }, 1000);\n  }\n\n  stopGame() {\n    this.setState({start: false, showStop: false, showWait: true});\n    this.timer.stop();\n    clearInterval(this.interval);\n    this.socket.emit('playerfinish', {words: this.state.words, time: this.state.time});\n    this.timer.reset();\n  }\n\n  updateWords(words) {\n    this.setState({words: words});  \n  }\n\n  render() {\n    return (\n      <Container>\n        <Box marginTop=\"50px\">\n        <Grid container spacing={2}>\n          <Grid item xs={10}>\n            <Box>\n              <Paper>\n                <Box height=\"600px\" display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n                  {this.state.error ? <ErrorMessage type=\"server\" back={this.props.back} /> :\n                  <MainPlay start={this.state.start} loading={this.state.loading} updateWords={this.updateWords} excerpt={this.state.excerpt} stopGame={this.stopGame} /> }\n                </Box>\n              </Paper>\n            </Box>\n          </Grid>\n          <Grid item xs={2}>\n            <Box>\n              <PlayerStatus players={this.state.players} spectators={this.state.spectators}/>\n            </Box>\n            <Box marginTop=\"16px\">\n              <Paper>\n                <Box height=\"114px\" display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n                  {this.state.start ? \n                  <StatsBox words={this.state.words} time={this.state.time} /> :\n                  <ActionBox showStart={this.state.showStart} startClick={this.startClick} gameStarted={this.state.start} /> }\n                </Box>\n              </Paper>\n            </Box>\n          </Grid>\n        </Grid>\n        {this.state.showStart && <button onClick={this.startClick}>Start Game</button>}\n        {this.state.showWait && <div>Please wait for other players to finish.</div>}\n        </Box>\n      </Container>\n    );\n  }\n  \n}\nexport default GamePage;","import React from 'react';\nimport MenuBack from '@material-ui/icons/ArrowBack';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Button, AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }));\n\nexport default function NavBar() {\n    const classes = useStyles();\n    return (\n        <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuBack />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Type Away\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    )\n}","import React, { Component } from 'react';\nimport Home from './Home';\nimport GamePage from './GamePage';\nimport { Button, Box, ThemeProvider, createMuiTheme } from '@material-ui/core';\nimport red from '@material-ui/core/colors/red';\nimport green from '@material-ui/core/colors/green';\nimport { palette } from '@material-ui/system';\nimport NavBar from './NavBar';\nimport '../assets/app.scss';\n/*\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: red[500],\n    },\n    secondary: {\n      main: green[500],\n    },\n  },\n});\n*/\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { play: false}\n    this.play = this.play.bind(this);\n    this.back = this.back.bind(this);\n  }\n\n  play(name) {\n    this.name = name;\n    console.log(\"Let's play,\", name);\n    this.setState({ play: true});\n  }\n\n  back() {\n    this.setState({ play: false });\n  }\n\n  render() {\n    return (\n      <Box height=\"100%\" bgcolor=\"primary.dark\">\n      <NavBar />\n        { this.state.play ?\n          <GamePage name={this.name} back={this.back} /> :\n          <Home play={this.play} />\n        }\n      </Box>\n    );\n  }\n  \n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}